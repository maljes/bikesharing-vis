import React from "react";
import styled from "styled-components";
import { connect } from "react-redux";
import classNames from 'classnames';

function mapStateToProps(state) {
    return {
        overlayInfo: state.overlayInfo,
    };
}

import ButtonClose from '../ButtonClose/index.js';

const OverlayBackground = styled.div`
    width: 100%;
    height: 100%;
    background: ${props => props.theme.colorPrimaryDark};
    opacity: .75;
    position: absolute;
    top: 0;
    left: 0;
`;

const AboutTitle = styled.h3`
    @media screen and (max-width: ${props => props.theme.screenWidthM}) {
        margin-top: 30px !important;
    }
`;

const OverlayInfoLogo = styled.svg`
    display: none;
    @media screen and (max-width: ${props => props.theme.screenWidthM}) {
        display: block;
        height: 75px;
        margin-top: 100px;
    }
`;

const OverlayInfoWrapper = styled.div`
    background: ${props => props.theme.colorPrimaryDark};
    width: 490px;
    opacity: 1;
    height: 470px;
    z-index: 10000;
    border-radius: 5px;

    position:absolute; /*it can be fixed too*/
    left:0; right:0;
    top:0; bottom:0;
    margin:auto;

    /*this to solve "the content will not be cut when the window is smaller than the content": */
    max-width:100%;
    max-height:100%;
    overflow:auto;

    font-family: ${props => props.theme.fontFamily};
    color: white;
    padding: 30px;

    h3 {
        margin-top: 0px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    p {
        opacity: .75;
        margin: 0;
        line-height: 150%;
    }

    @media screen and (max-width: ${props => props.theme.screenWidthM}) {
        height: 100%;
        width: auto;
        padding-bottom: 160px;
    }
`;

const ProviderLidl = styled.span`
    color: #E68661;
    opacity: 1 !important;
    font-weight: 600;
`;

const ProviderNext = styled.span`
    color: white;
    opacity: 1 !important;
    font-weight: 600;
`;

const sectionHeadline = styled.h3`

`;

const sectionText = styled.span`

`;

import LogoSvg from '../Logo/index';

class OverlayAbout extends React.Component {
    constructor(props) {
        super(props);
    }


    render() {
        if (this.props.overlayInfo) {
            return (
                <div>
                    <OverlayBackground></OverlayBackground>
                    <OverlayInfoWrapper>
                        {/* <LogoSvg style="left: 30px; top: 65px;"/> */}

                        <OverlayInfoLogo>
                            <g id="Page-1" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                                <g id="Artboard-Copy-5" transform="translate(-19.000000, -17.000000)" fillRule="nonzero">
                                    <path d="M25.5615164,35.3335 C22.6792664,35.3335 20.7183914,34.223125 19.3008914,32.663875 L21.6633914,30.27775 C22.7737664,31.529875 24.1912664,32.16775 25.7977664,32.16775 C27.5460164,32.16775 28.3965164,31.388125 28.3965164,30.18325 C28.3965164,29.2855 28.0185164,28.624 26.4828914,28.411375 L24.8527664,28.19875 C21.3798914,27.749875 19.7970164,26.048875 19.7970164,23.28475 C19.7970164,20.331625 22.1122664,18.27625 25.9867664,18.27625 C28.4673914,18.27625 30.3573914,19.103125 31.7040164,20.5915 L29.3178914,23.00125 C28.5382664,22.079875 27.4751414,21.442 25.7741414,21.442 C24.1676414,21.442 23.3880164,22.05625 23.3880164,23.0485 C23.3880164,24.1825 23.9786414,24.60775 25.3488914,24.820375 L26.9790164,25.08025 C30.3573914,25.623625 31.9875164,27.135625 31.9875164,29.970625 C31.9875164,33.136375 29.6722664,35.3335 25.5615164,35.3335 Z M34.6440164,35.05 L34.6440164,17.5675 L38.1405164,17.5675 L38.1405164,24.7495 L38.2822664,24.7495 C38.7311414,23.450125 39.7706414,22.363375 41.7315164,22.363375 C44.2593914,22.363375 45.6060164,24.158875 45.6060164,27.277375 L45.6060164,35.05 L42.1095164,35.05 L42.1095164,27.560875 C42.1095164,25.978 41.6606414,25.198375 40.3848914,25.198375 C39.2508914,25.198375 38.1405164,25.789 38.1405164,27.0175 L38.1405164,35.05 L34.6440164,35.05 Z M59.6970164,35.05 L57.7597664,35.05 C56.5076414,35.05 55.6098914,34.1995 55.3972664,32.8765 L55.2555164,32.8765 C54.8775164,34.483 53.5072664,35.3335 51.6172664,35.3335 C49.1366414,35.3335 47.7663914,33.86875 47.7663914,31.718875 C47.7663914,29.0965 49.7981414,27.844375 53.0820164,27.844375 L55.0428914,27.844375 L55.0428914,27.06475 C55.0428914,25.859875 54.4522664,25.103875 52.9875164,25.103875 C51.5936414,25.103875 50.8612664,25.812625 50.3178914,26.568625 L48.2388914,24.725875 C49.2311414,23.261125 50.6486414,22.363375 53.2473914,22.363375 C56.7438914,22.363375 58.5393914,23.969875 58.5393914,26.899375 L58.5393914,32.333125 L59.6970164,32.333125 L59.6970164,35.05 Z M52.9166414,32.900125 C54.0742664,32.900125 55.0428914,32.427625 55.0428914,31.293625 L55.0428914,29.828875 L53.3418914,29.828875 C51.9952664,29.828875 51.2865164,30.325 51.2865164,31.22275 L51.2865164,31.577125 C51.2865164,32.474875 51.8771414,32.900125 52.9166414,32.900125 Z M65.4011414,35.05 L61.9046414,35.05 L61.9046414,22.646875 L65.4011414,22.646875 L65.4011414,25.340125 L65.5192664,25.340125 C65.8027664,23.969875 66.7477664,22.646875 68.6850164,22.646875 L69.2992664,22.646875 L69.2992664,25.907125 L68.4251414,25.907125 C66.3933914,25.907125 65.4011414,26.356 65.4011414,27.797125 L65.4011414,35.05 Z M76.3736414,35.3335 C72.5700164,35.3335 70.4201414,32.805625 70.4201414,28.836625 C70.4201414,24.914875 72.4991414,22.363375 76.2318914,22.363375 C80.3426414,22.363375 81.9963914,25.340125 81.9963914,28.694875 L81.9963914,29.734375 L74.0347664,29.734375 L74.0347664,29.923375 C74.0347664,31.5535 74.9088914,32.593 76.7752664,32.593 C78.2400164,32.593 79.0432664,31.907875 79.8228914,31.104625 L81.5711414,33.278125 C80.4607664,34.553875 78.6416414,35.3335 76.3736414,35.3335 Z M76.3027664,24.9385 C74.9088914,24.9385 74.0347664,25.954375 74.0347664,27.49 L74.0347664,27.679 L78.3817664,27.679 L78.3817664,27.466375 C78.3817664,25.954375 77.6966414,24.9385 76.3027664,24.9385 Z M91.9530164,35.05 L91.9530164,32.971 L91.8348914,32.971 C91.4805164,34.317625 90.1102664,35.3335 88.5037664,35.3335 C85.3616414,35.3335 83.7315164,33.041875 83.7315164,28.836625 C83.7315164,24.631375 85.3616414,22.363375 88.5037664,22.363375 C90.1102664,22.363375 91.4805164,23.355625 91.8348914,24.725875 L91.9530164,24.725875 L91.9530164,17.5675 L95.4495164,17.5675 L95.4495164,35.05 L91.9530164,35.05 Z M89.6613914,32.4985 C90.9843914,32.4985 91.9530164,31.813375 91.9530164,30.679375 L91.9530164,27.0175 C91.9530164,25.8835 90.9843914,25.198375 89.6613914,25.198375 C88.3383914,25.198375 87.3697664,26.21425 87.3697664,27.7735 L87.3697664,29.923375 C87.3697664,31.482625 88.3383914,32.4985 89.6613914,32.4985 Z M70.6642664,60.95 L70.6642664,50.12975 L70.5933914,50.12975 L69.3885164,52.5395 L66.1755164,58.374875 L63.0333914,52.563125 L61.7812664,49.964375 L61.7103914,49.964375 L61.7103914,60.95 L58.3320164,60.95 L58.3320164,44.45975 L62.1356414,44.45975 L66.1755164,52.185125 L66.2227664,52.185125 L70.2153914,44.45975 L74.0426414,44.45975 L74.0426414,60.95 L70.6642664,60.95 Z M82.3927664,61.2335 C78.7545164,61.2335 76.5810164,58.72925 76.5810164,54.736625 C76.5810164,50.744 78.7545164,48.263375 82.3927664,48.263375 C86.0310164,48.263375 88.2045164,50.744 88.2045164,54.736625 C88.2045164,58.72925 86.0310164,61.2335 82.3927664,61.2335 Z M82.3927664,58.469375 C83.7630164,58.469375 84.5662664,57.571625 84.5662664,56.012375 L84.5662664,53.4845 C84.5662664,51.92525 83.7630164,51.0275 82.3927664,51.0275 C81.0225164,51.0275 80.2192664,51.92525 80.2192664,53.4845 L80.2192664,56.012375 C80.2192664,57.571625 81.0225164,58.469375 82.3927664,58.469375 Z M90.5538914,60.95 L90.5538914,43.4675 L94.0503914,43.4675 L94.0503914,50.625875 L94.1685164,50.625875 C94.5228914,49.255625 95.8931414,48.263375 97.4996414,48.263375 C100.641766,48.263375 102.271891,50.531375 102.271891,54.736625 C102.271891,58.941875 100.641766,61.2335 97.4996414,61.2335 C95.8931414,61.2335 94.5228914,60.217625 94.1685164,58.871 L94.0503914,58.871 L94.0503914,60.95 L90.5538914,60.95 Z M96.3420164,58.3985 C97.6650164,58.3985 98.6336414,57.382625 98.6336414,55.823375 L98.6336414,53.6735 C98.6336414,52.11425 97.6650164,51.098375 96.3420164,51.098375 C95.0190164,51.098375 94.0503914,51.7835 94.0503914,52.9175 L94.0503914,56.579375 C94.0503914,57.713375 95.0190164,58.3985 96.3420164,58.3985 Z M106.534891,47.223875 C105.117391,47.223875 104.503141,46.4915 104.503141,45.49925 L104.503141,44.9795 C104.503141,43.98725 105.117391,43.254875 106.534891,43.254875 C107.952391,43.254875 108.566641,43.98725 108.566641,44.9795 L108.566641,45.49925 C108.566641,46.4915 107.952391,47.223875 106.534891,47.223875 Z M104.786641,60.95 L104.786641,48.546875 L108.283141,48.546875 L108.283141,60.95 L104.786641,60.95 Z M116.467891,60.95 L114.885016,60.95 C112.498891,60.95 111.412141,59.745125 111.412141,57.548 L111.412141,43.4675 L114.908641,43.4675 L114.908641,58.233125 L116.467891,58.233125 L116.467891,60.95 Z M120.187516,47.223875 C118.770016,47.223875 118.155766,46.4915 118.155766,45.49925 L118.155766,44.9795 C118.155766,43.98725 118.770016,43.254875 120.187516,43.254875 C121.605016,43.254875 122.219266,43.98725 122.219266,44.9795 L122.219266,45.49925 C122.219266,46.4915 121.605016,47.223875 120.187516,47.223875 Z M118.439266,60.95 L118.439266,48.546875 L121.935766,48.546875 L121.935766,60.95 L118.439266,60.95 Z M131.490766,60.95 L129.411766,60.95 C127.002016,60.95 125.726266,59.697875 125.726266,57.335375 L125.726266,51.26375 L123.978016,51.26375 L123.978016,48.546875 L124.852141,48.546875 C125.797141,48.546875 126.080641,48.074375 126.080641,47.223875 L126.080641,45.192125 L129.222766,45.192125 L129.222766,48.546875 L131.679766,48.546875 L131.679766,51.26375 L129.222766,51.26375 L129.222766,58.233125 L131.490766,58.233125 L131.490766,60.95 Z M139.746391,54.335 L141.565516,48.546875 L144.825766,48.546875 L140.053516,62.863625 C139.415641,64.77725 138.376141,65.675 136.249891,65.675 L134.076391,65.675 L134.076391,62.958125 L136.415266,62.958125 L136.840516,61.587875 L132.493516,48.546875 L135.966391,48.546875 L137.785516,54.335 L138.683266,57.926 L138.825016,57.926 L139.746391,54.335 Z M23.8132664,86.85 L20.2222664,86.85 L20.2222664,70.35975 L31.1606414,70.35975 L31.1606414,73.549125 L23.8132664,73.549125 L23.8132664,77.140125 L30.0738914,77.140125 L30.0738914,80.305875 L23.8132664,80.305875 L23.8132664,86.85 Z M38.7783914,86.85 L37.1955164,86.85 C34.8093914,86.85 33.7226414,85.645125 33.7226414,83.448 L33.7226414,69.3675 L37.2191414,69.3675 L37.2191414,84.133125 L38.7783914,84.133125 L38.7783914,86.85 Z M45.7818914,87.1335 C42.1436414,87.1335 39.9701414,84.62925 39.9701414,80.636625 C39.9701414,76.644 42.1436414,74.163375 45.7818914,74.163375 C49.4201414,74.163375 51.5936414,76.644 51.5936414,80.636625 C51.5936414,84.62925 49.4201414,87.1335 45.7818914,87.1335 Z M45.7818914,84.369375 C47.1521414,84.369375 47.9553914,83.471625 47.9553914,81.912375 L47.9553914,79.3845 C47.9553914,77.82525 47.1521414,76.9275 45.7818914,76.9275 C44.4116414,76.9275 43.6083914,77.82525 43.6083914,79.3845 L43.6083914,81.912375 C43.6083914,83.471625 44.4116414,84.369375 45.7818914,84.369375 Z M55.9983914,86.85 L52.5255164,74.446875 L55.9038914,74.446875 L57.1087664,79.455375 L57.9592664,83.235375 L58.0537664,83.235375 L59.0460164,79.455375 L60.4635164,74.446875 L63.6528914,74.446875 L65.0940164,79.455375 L66.1098914,83.235375 L66.2043914,83.235375 L67.0548914,79.455375 L68.2597664,74.446875 L71.4963914,74.446875 L68.0707664,86.85 L64.4088914,86.85 L62.8968914,81.60525 L62.0227664,78.39225 L61.9518914,78.39225 L61.1013914,81.60525 L59.5893914,86.85 L55.9983914,86.85 Z M77.5548914,87.1335 C75.1687664,87.1335 73.6095164,86.33025 72.3337664,84.91275 L74.3891414,82.83375 C75.2632664,83.802375 76.3263914,84.416625 77.6730164,84.416625 C79.0432664,84.416625 79.5157664,83.96775 79.5157664,83.235375 C79.5157664,82.621125 79.1377664,82.314 78.2636414,82.195875 L76.9170164,82.0305 C74.1056414,81.676125 72.7353914,80.447625 72.7353914,78.20325 C72.7353914,75.817125 74.6017664,74.163375 77.5548914,74.163375 C80.1536414,74.163375 81.3585164,74.872125 82.6106414,76.100625 L80.6025164,78.156 C79.8228914,77.376375 78.7833914,76.88025 77.7438914,76.88025 C76.5626414,76.88025 76.0901414,77.3055 76.0901414,77.91975 C76.0901414,78.58125 76.3736414,78.935625 77.3895164,79.077375 L78.7833914,79.266375 C81.4766414,79.62075 82.8705164,80.84925 82.8705164,82.999125 C82.8705164,85.38525 80.7442664,87.1335 77.5548914,87.1335 Z" id="SharedMobilityFlows" fill="#FFFFFF"></path>
                                    <path d="M43.0238576,50.0000469 C46.3496371,50.0129844 49.0501982,52.76825 48.9992919,56.0936094 C48.9489482,59.3839062 46.2501215,62.0317813 42.940467,61.9996719 C39.7140625,61.9683594 37.0068452,59.2393906 37.0000483,56.0128438 C36.996392,54.2617812 37.7431104,52.6852344 38.9363129,51.5861094 L38.2360945,50.4579687 L34.2066279,56.9671719 C34.0015546,57.2984266 33.6396927,57.499999 33.2500971,57.5 L30.8110516,57.5 C30.145005,60.0878281 27.7958188,62 25.0001015,62 C21.6744627,62 18.9806516,59.2943281 19.0001047,55.9641875 C19.0193234,52.6724375 21.7231658,49.9920313 25.0149609,50 C25.7222105,50.0017344 26.4005383,50.1260938 27.0302098,50.3525 L28.409131,48.125 L26.1251009,48.125 C25.5101481,48.125 25.0112109,47.6319219 25.0003359,47.0204844 C24.989039,46.3905781 25.5204137,45.875 26.1504603,45.875 L30.2500987,45.875 C30.6643329,45.875 31.0000983,46.2107656 31.0000983,46.625 L31.0000983,47.375 L36.3224705,47.375 L35.6242209,46.25 L33.2500503,46.25 C32.8358161,46.25 32.5000507,45.9142344 32.5000507,45.5 L32.5000507,44.75 C32.5000507,44.3357656 32.8358161,44 33.2500503,44 L36.2500487,44 C36.6391879,43.9999868 37.0007009,44.2010776 37.2059232,44.5317031 L40.8471712,50.39825 C41.5224521,50.1385625 42.2563736,49.9970469 43.0238576,50.0000469 Z M28.092874,54 L27,56 L29,56 C28.8628827,55.2378885 28.5420958,54.5508528 28.092874,54 Z M25.1748206,60 C26.8832616,60 28.3544684,59.1348438 29,57.9 L24.7573386,57.9 C23.7768297,57.9 23.1768037,56.9955562 23.6924462,56.29735 L26.0671363,53.0813313 C25.779439,53.0285688 25.4810959,53 25.1748206,53 C22.8728245,53 21,54.5701 21,56.5 C21,58.4299 22.8728245,60 25.1748206,60 Z M32.0977327,55 L36,50 L29.2999153,50 L28,51.6655833 C29.1991096,52.5044167 30.0183725,53.6768333 30.2263925,55 L32.0977327,55 Z M42.7843566,59.9950136 C45.087403,60.1013706 46.99995,58.4924103 47,56.5000227 C47,54.5701104 45.2056028,53.0000004 43,53 C42.6651154,52.9998573 42.3315329,53.03656 42.0071078,53.1092449 L44.2305043,56.243646 C44.463554,56.5721231 44.3481042,57.0036759 43.9727048,57.2075522 L43.2930058,57.5766733 C42.9176064,57.7805496 42.4244072,57.6795739 42.1914075,57.3510968 L39.969761,54.2191894 C39.334662,54.8642873 38.9624126,55.7129114 39.0030125,56.636961 C39.0819124,58.4334787 40.7325598,59.9002943 42.7843566,59.9950136 Z" id="Combined-Shape" fill="#21A8AE"></path>
                                </g>
                            </g>
                        </OverlayInfoLogo>



                        <AboutTitle>Über das Projekt</AboutTitle>
                        <p>
                        Urbane Mobilität verändert sich stetig. Bikesharing wird seit einigen Jahren immer mehr in Großstädten genutzt, um Räder flexibel in der ganzen Stadt ausleihen und abstellen zu können. Wir haben das Phänomen für Berlin genauer untersucht und die Standortdaten aller Räder der Bikesharing-Anbieter <ProviderNext>Nextbike</ProviderNext> und <ProviderLidl>LIDL-Bike</ProviderLidl> gesammelt.

                        <br/>
                        <br/>

                        Die Visualisierung zeigt die Nutzung der Angebote ab dem Zeitraum des 02.07.2019. Es werden alle Radbewegungen abgebildet, die größer als 300 Meter sind. So wird sichtbar, zu welchen Uhrzeiten und in welchen Regionen Bikesharing besonders intensiv genutzt wird.

                        <br/>
                        <br/>

                        (Die abgebildeten Routen können von der eigentlichen Route abweichen, da der Algorithmus den schnellsten Weg zwischen zwei Punkten berechnet).
                        </p>
                        <br/>
                        <ButtonClose/>
                    </OverlayInfoWrapper>
                </div>
            )
        } else {
            return (
                <div></div>
            )
        }

    }
}

export default connect(mapStateToProps)(OverlayAbout);